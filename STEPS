docker build -t nodeserver -f Dockerfile .
docker run -i -p 3000:3000 -t nodeserver

docker build -t nodeserver-tools -f Dockerfile-tools .

docker run -i -v "$PWD"/package.json:/tmp/package.json -v "$PWD"/node_modules_linux:/tmp/node_modules -w /tmp -t node:12.16.1 npm install

docker run -i -p 3000:3000 -v "$PWD"/:/app -v "$PWD"/node_modules_linux:/app/node_modules -t nodeserver-tools /bin/run-dev

# to run debugger
# expose debuger address, map it, run run-deb script
docker run -i --expose 9229 -p 9229:9229 -p 3000:3000 -v "$PWD"/:/app -v "$PWD"/node_modules_linux:/app/node_modules -t nodeserver-tools /bin/run-debug

# build production read image
docker build -t nodeserver-prod -f Dockerfile-run .


## HELM
helm install nodeserver charts/nodeserver
helm status

To get port and host you may use the following commands:

    export SAMPLE_NODE_PORT=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services nodeserver-service)
    export SAMPLE_NODE_IP=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")

    And then open your web browser to http://${SAMPLE_NODE_IP}:${SAMPLE_NODE_PORT}" from the command line, eg:

# delete installation to do new install
helm delete --purge nodeserver 

# we can also upgrade without deploying to accommodate changes in helm charts
helm upgrade nodeserver chart/nodeserver

# --install mean upgrade if it is installed, or install in other case
helm upgrade --install nodeserver chart/nodeserver